{"version":3,"sources":["../../../../build/lib/organisms/BottomSheetAndroid.js"],"names":["React","Component","KeyboardAvoidingView","Modal","TouchableOpacity","Animated","PanResponder","Platform","StyleSheet","Text","ORIENTATIONS","BottomSheetAndroid","constructor","props","height","state","modalVisible","animatedHeight","Value","pan","ValueXY","buttonHeight","options","length","createPanResponder","setModalVisible","visible","minClosingHeight","duration","onClose","setState","timing","toValue","start","setValue","x","y","closeOnDragDown","panResponder","create","onStartShouldSetPanResponder","onPanResponderMove","e","gestureState","dy","event","onPanResponderRelease","spring","open","close","render","animationType","closeOnPressMask","closeOnPressBack","closeOnButtonPress","customStyles","cancelButtonIndex","panStyle","transform","getTranslateTransform","createElement","transparent","supportedOrientations","onRequestClose","enabled","OS","behavior","style","styles","wrapper","undefined","mask","activeOpacity","onPress","View","Object","assign","panHandlers","container","map","option","index","key","onPressWithIndex","button","text","fontSize","lineHeight","color","justifyContent","alignItems","borderBottomWidth","borderBottomColor","flex","backgroundColor","width","overflow","draggableContainer","draggableIcon","borderRadius","margin"],"mappings":"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","file":"BottomSheetAndroid.js","sourcesContent":["import React, { Component } from 'react';\nimport { KeyboardAvoidingView, Modal, TouchableOpacity, Animated, PanResponder, Platform, StyleSheet, Text, } from 'react-native';\nconst ORIENTATIONS = [\n    'portrait',\n    'portrait-upside-down',\n    'landscape',\n    'landscape-left',\n    'landscape-right',\n];\nclass BottomSheetAndroid extends Component {\n    constructor(props) {\n        super(props);\n        this.height = 0;\n        this.state = {\n            modalVisible: false,\n            animatedHeight: new Animated.Value(0),\n            pan: new Animated.ValueXY(),\n        };\n        this.height = props.buttonHeight * props.options.length + 30;\n        if (!this.height) {\n            this.height = 300;\n        }\n        this.createPanResponder(props);\n    }\n    setModalVisible(visible) {\n        const { minClosingHeight, duration, onClose } = this.props;\n        const { animatedHeight, pan } = this.state;\n        if (visible) {\n            this.setState({ modalVisible: visible });\n            Animated.timing(animatedHeight, {\n                toValue: this.height,\n                duration,\n            }).start();\n        }\n        else {\n            Animated.timing(animatedHeight, {\n                toValue: minClosingHeight,\n                duration,\n            }).start(() => {\n                pan.setValue({ x: 0, y: 0 });\n                this.setState({\n                    modalVisible: visible,\n                    animatedHeight: new Animated.Value(0),\n                });\n                if (typeof onClose === 'function') {\n                    onClose();\n                }\n            });\n        }\n    }\n    createPanResponder(props) {\n        const { closeOnDragDown } = props;\n        const { pan } = this.state;\n        this.panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: () => closeOnDragDown ? closeOnDragDown : false,\n            onPanResponderMove: (e, gestureState) => {\n                if (gestureState.dy > 0) {\n                    Animated.event([null, { dy: pan.y }])(e, gestureState);\n                }\n            },\n            onPanResponderRelease: (e, gestureState) => {\n                if (this.height / 4 - gestureState.dy < 0) {\n                    this.setModalVisible(false);\n                }\n                else {\n                    Animated.spring(pan, { toValue: { x: 0, y: 0 } }).start();\n                }\n            },\n        });\n    }\n    open() {\n        this.setModalVisible(true);\n    }\n    close() {\n        this.setModalVisible(false);\n    }\n    render() {\n        const { animationType, closeOnPressMask, closeOnPressBack, closeOnButtonPress, options, customStyles, cancelButtonIndex, } = this.props;\n        const { animatedHeight, pan, modalVisible } = this.state;\n        const panStyle = {\n            transform: pan.getTranslateTransform(),\n        };\n        return (React.createElement(Modal, { transparent: true, animationType: animationType, visible: modalVisible, supportedOrientations: ORIENTATIONS, onRequestClose: () => {\n                if (closeOnPressBack) {\n                    this.setModalVisible(false);\n                }\n            } },\n            React.createElement(KeyboardAvoidingView, { enabled: Platform.OS === 'ios', behavior: \"padding\", style: [\n                    styles.wrapper,\n                    customStyles ? customStyles.wrapper : undefined,\n                ] },\n                React.createElement(TouchableOpacity, { style: styles.mask, activeOpacity: 1, onPress: () => (closeOnPressMask ? this.close() : null) }),\n                React.createElement(Animated.View, Object.assign({}, (this.panResponder ? this.panResponder.panHandlers : undefined), { style: [\n                        panStyle,\n                        styles.container,\n                        { height: animatedHeight },\n                        customStyles ? customStyles.container : undefined,\n                    ] }), options &&\n                    options.map((option, index) => (React.createElement(TouchableOpacity, { key: index, onPress: () => {\n                            if (index !== cancelButtonIndex) {\n                                this.props.onPressWithIndex(index);\n                                if (closeOnButtonPress) {\n                                    this.close();\n                                }\n                            }\n                            else if (cancelButtonIndex) {\n                                this.close();\n                            }\n                        }, style: [styles.button, { height: this.props.buttonHeight }] },\n                        React.createElement(Text, { style: styles.text }, option))))))));\n    }\n}\nconst styles = StyleSheet.create({\n    text: {\n        fontSize: 20,\n        lineHeight: 32,\n        color: '#2e7df6',\n    },\n    button: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomWidth: 0.2,\n        borderBottomColor: '#535D7E',\n    },\n    wrapper: {\n        flex: 1,\n        backgroundColor: '#00000077',\n    },\n    mask: {\n        flex: 1,\n        backgroundColor: 'transparent',\n    },\n    container: {\n        backgroundColor: '#fff',\n        width: '100%',\n        height: 0,\n        overflow: 'hidden',\n    },\n    draggableContainer: {\n        width: '100%',\n        alignItems: 'center',\n        backgroundColor: 'transparent',\n    },\n    draggableIcon: {\n        width: 35,\n        height: 5,\n        borderRadius: 5,\n        margin: 10,\n        backgroundColor: '#ccc',\n    },\n});\nexport default BottomSheetAndroid;\n//# sourceMappingURL=BottomSheetAndroid.js.map"]}