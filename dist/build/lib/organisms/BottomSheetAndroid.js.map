{"version":3,"sources":["../../../../build/lib/organisms/BottomSheetAndroid.js"],"names":["Object","defineProperty","exports","value","react_1","require","react_native_1","ORIENTATIONS","BottomSheetAndroid","Component","constructor","props","height","state","modalVisible","animatedHeight","Animated","Value","pan","ValueXY","buttonHeight","options","length","createPanResponder","setModalVisible","visible","minClosingHeight","duration","onClose","setState","timing","toValue","start","setValue","x","y","closeOnDragDown","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","e","gestureState","dy","event","onPanResponderRelease","spring","open","close","render","animationType","closeOnPressMask","closeOnPressBack","closeOnButtonPress","customStyles","cancelButtonIndex","panStyle","transform","getTranslateTransform","default","createElement","Modal","transparent","supportedOrientations","onRequestClose","KeyboardAvoidingView","enabled","Platform","OS","behavior","style","styles","wrapper","undefined","TouchableOpacity","mask","activeOpacity","onPress","View","assign","panHandlers","container","map","option","index","key","onPressWithIndex","button","Text","text","StyleSheet","fontSize","lineHeight","color","justifyContent","alignItems","borderBottomWidth","borderBottomColor","flex","backgroundColor","width","overflow","draggableContainer","draggableIcon","borderRadius","margin"],"mappings":"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","file":"BottomSheetAndroid.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst react_native_1 = require(\"react-native\");\nconst ORIENTATIONS = [\n    'portrait',\n    'portrait-upside-down',\n    'landscape',\n    'landscape-left',\n    'landscape-right',\n];\nclass BottomSheetAndroid extends react_1.Component {\n    constructor(props) {\n        super(props);\n        this.height = 0;\n        this.state = {\n            modalVisible: false,\n            animatedHeight: new react_native_1.Animated.Value(0),\n            pan: new react_native_1.Animated.ValueXY(),\n        };\n        this.height = props.buttonHeight * props.options.length + 30;\n        if (!this.height) {\n            this.height = 300;\n        }\n        this.createPanResponder(props);\n    }\n    setModalVisible(visible) {\n        const { minClosingHeight, duration, onClose } = this.props;\n        const { animatedHeight, pan } = this.state;\n        if (visible) {\n            this.setState({ modalVisible: visible });\n            react_native_1.Animated.timing(animatedHeight, {\n                toValue: this.height,\n                duration,\n            }).start();\n        }\n        else {\n            react_native_1.Animated.timing(animatedHeight, {\n                toValue: minClosingHeight,\n                duration,\n            }).start(() => {\n                pan.setValue({ x: 0, y: 0 });\n                this.setState({\n                    modalVisible: visible,\n                    animatedHeight: new react_native_1.Animated.Value(0),\n                });\n                if (typeof onClose === 'function') {\n                    onClose();\n                }\n            });\n        }\n    }\n    createPanResponder(props) {\n        const { closeOnDragDown } = props;\n        const { pan } = this.state;\n        this.panResponder = react_native_1.PanResponder.create({\n            onStartShouldSetPanResponder: () => closeOnDragDown ? closeOnDragDown : false,\n            onPanResponderMove: (e, gestureState) => {\n                if (gestureState.dy > 0) {\n                    react_native_1.Animated.event([null, { dy: pan.y }])(e, gestureState);\n                }\n            },\n            onPanResponderRelease: (e, gestureState) => {\n                if (this.height / 4 - gestureState.dy < 0) {\n                    this.setModalVisible(false);\n                }\n                else {\n                    react_native_1.Animated.spring(pan, { toValue: { x: 0, y: 0 } }).start();\n                }\n            },\n        });\n    }\n    open() {\n        this.setModalVisible(true);\n    }\n    close() {\n        this.setModalVisible(false);\n    }\n    render() {\n        const { animationType, closeOnPressMask, closeOnPressBack, closeOnButtonPress, options, customStyles, cancelButtonIndex, } = this.props;\n        const { animatedHeight, pan, modalVisible } = this.state;\n        const panStyle = {\n            transform: pan.getTranslateTransform(),\n        };\n        return (react_1.default.createElement(react_native_1.Modal, { transparent: true, animationType: animationType, visible: modalVisible, supportedOrientations: ORIENTATIONS, onRequestClose: () => {\n                if (closeOnPressBack) {\n                    this.setModalVisible(false);\n                }\n            } },\n            react_1.default.createElement(react_native_1.KeyboardAvoidingView, { enabled: react_native_1.Platform.OS === 'ios', behavior: \"padding\", style: [\n                    styles.wrapper,\n                    customStyles ? customStyles.wrapper : undefined,\n                ] },\n                react_1.default.createElement(react_native_1.TouchableOpacity, { style: styles.mask, activeOpacity: 1, onPress: () => (closeOnPressMask ? this.close() : null) }),\n                react_1.default.createElement(react_native_1.Animated.View, Object.assign({}, (this.panResponder ? this.panResponder.panHandlers : undefined), { style: [\n                        panStyle,\n                        styles.container,\n                        { height: animatedHeight },\n                        customStyles ? customStyles.container : undefined,\n                    ] }), options &&\n                    options.map((option, index) => (react_1.default.createElement(react_native_1.TouchableOpacity, { key: index, onPress: () => {\n                            if (index !== cancelButtonIndex) {\n                                this.props.onPressWithIndex(index);\n                                if (closeOnButtonPress) {\n                                    this.close();\n                                }\n                            }\n                            else if (cancelButtonIndex) {\n                                this.close();\n                            }\n                        }, style: [styles.button, { height: this.props.buttonHeight }] },\n                        react_1.default.createElement(react_native_1.Text, { style: styles.text }, option))))))));\n    }\n}\nconst styles = react_native_1.StyleSheet.create({\n    text: {\n        fontSize: 20,\n        lineHeight: 32,\n        color: '#2e7df6',\n    },\n    button: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottomWidth: 0.2,\n        borderBottomColor: '#535D7E',\n    },\n    wrapper: {\n        flex: 1,\n        backgroundColor: '#00000077',\n    },\n    mask: {\n        flex: 1,\n        backgroundColor: 'transparent',\n    },\n    container: {\n        backgroundColor: '#fff',\n        width: '100%',\n        height: 0,\n        overflow: 'hidden',\n    },\n    draggableContainer: {\n        width: '100%',\n        alignItems: 'center',\n        backgroundColor: 'transparent',\n    },\n    draggableIcon: {\n        width: 35,\n        height: 5,\n        borderRadius: 5,\n        margin: 10,\n        backgroundColor: '#ccc',\n    },\n});\nexports.default = BottomSheetAndroid;\n//# sourceMappingURL=BottomSheetAndroid.js.map"]}