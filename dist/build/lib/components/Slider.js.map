{"version":3,"sources":["../../../../build/lib/components/Slider.js"],"names":["React","PureComponent","View","StyleSheet","theme","Text","RNSlider","require","ShowHide","Slider","constructor","arguments","state","showTooltip","HIDE","value","props","existingValue","minimum","componentWidth","textWidth","render","maximum","thumbWidth","leftText","rightText","showTooltipOnSlide","leftTextStyle","rightTextStyle","division","textLeftCalculation","leftTopText","createElement","type","style","styles","topTexts","rightTopText","thumbStyle","trackStyle","thumbTextStyle","tooltipStyle","onValueChange","step","topTextsContainer","onLayout","event","width","nativeEvent","layout","setState","minimumValue","maximumValue","minimumTrackTintColor","colors","primary","maximumTrackTintColor","onSlidingStart","SHOW","onSlidingComplete","pointerEvents","thumbTextContainer","left","thumbText","tooltip","display","tooltipText","defaultProps","create","color","height","backgroundColor","dusk","position","top","borderRadius","justifyContent","alignItems","marginBottom","flexDirection","opacity","bottom","zIndex"],"mappings":"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","file":"Slider.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport theme from '../utils/Theme';\nimport { Text } from '../';\nconst RNSlider = require('react-native-slider');\nvar ShowHide;\n(function (ShowHide) {\n    ShowHide[\"SHOW\"] = \"flex\";\n    ShowHide[\"HIDE\"] = \"none\";\n})(ShowHide || (ShowHide = {}));\nexport default class Slider extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            showTooltip: ShowHide.HIDE,\n            value: this.props.existingValue\n                ? this.props.existingValue - this.props.minimum\n                : 0,\n            componentWidth: 0,\n            textWidth: 0,\n        };\n    }\n    render() {\n        const { minimum, maximum, thumbWidth, leftText, rightText, showTooltipOnSlide, leftTextStyle, rightTextStyle, } = this.props;\n        const division = maximum - minimum;\n        const textLeftCalculation = thumbWidth\n            ? ((this.state.componentWidth - thumbWidth) / division) *\n                this.state.value +\n                thumbWidth / 2 -\n                this.state.textWidth / 2\n            : 0;\n        const leftTopText = leftText ? (React.createElement(Text, { type: \"normal\", style: [styles.topTexts, leftTextStyle] }, leftText)) : (React.createElement(View, null));\n        const rightTopText = rightText ? (React.createElement(Text, { type: \"normal\", style: [styles.topTexts, rightTextStyle] }, rightText)) : (React.createElement(View, null));\n        const { thumbStyle, trackStyle, thumbTextStyle, tooltipStyle, onValueChange, step, } = this.props;\n        return (React.createElement(View, null,\n            React.createElement(View, { style: styles.topTextsContainer },\n                leftTopText,\n                rightTopText),\n            React.createElement(View, { onLayout: event => {\n                    let { width } = event.nativeEvent.layout;\n                    this.setState({ componentWidth: width });\n                } },\n                React.createElement(RNSlider, { value: this.state.value, minimumValue: 0, maximumValue: maximum - minimum, minimumTrackTintColor: theme.colors.primary, maximumTrackTintColor: 'rgb(224, 247, 247)', step: step, thumbStyle: [thumbStyle, { width: thumbWidth }], trackStyle: [trackStyle, styles.trackStyle], onValueChange: (value) => {\n                        this.setState({ value: value });\n                        onValueChange(value + minimum);\n                    }, onSlidingStart: () => {\n                        this.setState({ showTooltip: ShowHide.SHOW });\n                    }, onSlidingComplete: () => {\n                        this.setState({ showTooltip: ShowHide.HIDE });\n                    } }),\n                React.createElement(View, { pointerEvents: 'none', onLayout: event => {\n                        let { width } = event.nativeEvent.layout;\n                        this.setState({ textWidth: width });\n                    }, style: [\n                        styles.thumbTextContainer,\n                        {\n                            left: textLeftCalculation,\n                        },\n                    ] },\n                    React.createElement(Text, { type: \"small\", style: [thumbTextStyle, styles.thumbText] }, this.state.value + minimum),\n                    showTooltipOnSlide && (React.createElement(View, { style: [styles.tooltip, { display: this.state.showTooltip }] },\n                        React.createElement(Text, { type: \"header4\", style: [tooltipStyle, styles.tooltipText] }, this.state.value + minimum)))))));\n    }\n}\nSlider.defaultProps = {\n    step: 1,\n    thumbWidth: 50,\n    showTooltipOnSlide: true,\n};\nconst styles = StyleSheet.create({\n    tooltipText: {\n        color: 'white',\n    },\n    tooltip: {\n        height: 49,\n        width: 49,\n        backgroundColor: theme.colors.dusk,\n        position: 'absolute',\n        top: -75,\n        borderRadius: 24,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    topTextsContainer: {\n        marginBottom: 13,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    topTexts: {\n        opacity: 0.8,\n    },\n    thumbTextContainer: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        zIndex: 10,\n        justifyContent: 'center',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    trackStyle: {\n        borderRadius: 5,\n        height: 10,\n    },\n    thumbText: {\n        color: theme.colors.dusk,\n    },\n});\n//# sourceMappingURL=Slider.js.map"]}